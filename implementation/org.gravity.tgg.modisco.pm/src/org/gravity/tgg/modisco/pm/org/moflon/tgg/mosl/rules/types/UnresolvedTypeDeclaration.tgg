#using org.gravity.tgg.modisco.pm.*
#using AttrCondDefLibrary.*

#abstract #rule UnresolvedTypeDeclaration
#with org.gravity.tgg.modisco.pm

#source {
	eModel:MGravityModel {
		++  -unresolvedItems -> unresolvedType
	}

	++unresolvedType:UnresolvedItem
}

#target {
	pg:TypeGraph {
		++  -allTypes -> tClass
		- modules -> tModule
	}

	tModule:TModule {
		location=="${PROXIES}"
		++-contains -> tClass
	}

	++tClass:TUnresolvedType
}

#correspondence {
	eModelToPg :ModelToTypeGraph {
		#src->eModel
		#trg->pg
	}
}

#attributeConditions {
	eq(unresolvedType.name, tClass.tName)

	eq(unresolvedType.proxy, tClass.tLib)
}


#using org.gravity.tgg.modisco.pm.*

#rule UnresolvedClassDeclaration #extends UnresolvedTypeDeclaration #with org.gravity.tgg.modisco.pm

#source {
	++unresolvedType:UnresolvedTypeDeclaration
}

#target{
	++tClass:TUnresolvedType
}

#correspondence {
	++ eAnonymousClassDeclarationToTClass :TypeToTAbstractType {
		#src->unresolvedType
		#trg->tClass
	}
}


#using org.gravity.tgg.modisco.pm.*

#rule UnresolvedInterfaceDeclaration #extends UnresolvedTypeDeclaration #with org.gravity.tgg.modisco.pm

#source {
	++unresolvedType:UnresolvedInterfaceDeclaration
}

#target{
	++tClass:TUnresolvedType
}

#correspondence {
	++ eAnonymousClassDeclarationToTClass :TypeToTAbstractType {
		#src->unresolvedType
		#trg->tClass
	}
}


