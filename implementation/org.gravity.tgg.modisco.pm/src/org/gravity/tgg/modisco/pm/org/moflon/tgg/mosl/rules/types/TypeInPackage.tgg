#using org.gravity.tgg.modisco.pm.*
#using AttrCondDefLibrary.*

#abstract #rule TypeInPackage_Abstract
#with org.gravity.tgg.modisco.pm

#source {
	mPackage:Package {
		++  -ownedElements -> mType
	}

	++mType:AbstractTypeDeclaration
}

#target {
	tPackage:TPackage {
		-model -> pg
		++  -allTypes -> tType
	}

	pg:TypeGraph {
		++  -allTypes -> tType
	}

	++tType:TAbstractType 
}

#correspondence {
	mPackageToTPackage :PackageToTPackage {
		#src->mPackage
		#trg->tPackage
	}
	++ type2Type:TypeToTAbstractType {
		#src->mType
		#trg->tType
	}
	
	++ annotatable2Annotatable : ASTNodeToTAnnotatable {
		#src->mType
		#trg->tType
	}
}

#attributeConditions {
	eq(mType.proxy, tType.tLib)
	eq(mType.name, tType.tName)
}

#using org.gravity.tgg.modisco.pm.*
#using AttrCondDefLibrary.*

#rule ClassInPackage
#extends TypeInPackage_Abstract
#with org.gravity.tgg.modisco.pm

#source {
	++mType:MClass
}

#target {
	++tType:TClass

	tPackage:TPackage {
		++  -classes -> tType
	}

	pg:TypeGraph {
		++  -classes -> tType
	}
}

#using org.gravity.tgg.modisco.pm.*
#using AttrCondDefLibrary.*

#rule InterfaceInPackage
#extends TypeInPackage_Abstract
#with org.gravity.tgg.modisco.pm


#source {
	++mType:InterfaceDeclaration
}

#target {
	++tType:TInterface

	pg:TypeGraph {
		++  -interfaces -> tType
	}

	tPackage:TPackage {
		++  -interfaces -> tType
	}
}

#using org.gravity.tgg.modisco.pm.*
#using AttrCondDefLibrary.*

#rule EnumInPackage
#extends TypeInPackage_Abstract
#with org.gravity.tgg.modisco.pm

#source {
	++mType:EnumDeclaration
}

#target {
	tPackage:TPackage {
		-model -> pg
		++  -classes -> tType
	}

	++tType:TClass {
		++-tAnnotation -> tAnnotation
	}

	++tAnnotation:TEnum

	pg:TypeGraph {
		++  -classes -> tType
	}
}

#using org.gravity.tgg.modisco.pm.*
#using AttrCondDefLibrary.*

#rule AnnotationTypeInPackage #extends TypeInPackage_Abstract #with org.gravity.tgg.modisco.pm

#source {
	++mType:AnnotationTypeDeclaration
}

#target {
	++tType:TAnnotationType

	pg:TypeGraph {
		++  -annotationTypes -> tType
	}
}