#using org.gravity.tgg.modisco.pm.*
#using AttrCondDefLibrary.*

#abstract #rule TypesOrphaned
#with org.gravity.tgg.modisco.pm

#source {
	mModel:Model {
		++ -orphanTypes -> mType
	}

	++ mType: AbstractTypeDeclaration
}

#target {
	pg:TypeGraph {
		++ -allTypes -> tType
		-modules->tModule
	}
	
	tModule:TModule {
		location == "${PROXIES}"
		++ -contains->tType
	}

	++ tType:TAbstractType
}

#correspondence {
	mModelToTypeGraph :ModelToTypeGraph {
		#src->mModel
		#trg->pg
	}

	++ mTypeToTType :TypeToTAbstractType {
		#src->mType
		#trg->tType
	}

	++ mAnnotatableToTAnnotatable :ASTNodeToTAnnotatable {
		#src->mType
		#trg->tType
	}
}

#attributeConditions {
	eq(mType.name, tType.tName)
}

#rule OrphanedClass #extends TypesOrphaned
#with org.gravity.tgg.modisco.pm

#source{
	++mType:MClass
}

#target{
	++tType:TClass
}

#rule OrphanedInterface #extends TypesOrphaned
#with org.gravity.tgg.modisco.pm

#source{
	++mType:InterfaceDeclaration
}

#target{
	++tType:TInterface
}

#rule OrphanedEnum #extends TypesOrphaned
#with org.gravity.tgg.modisco.pm

#source{
	++mType:EnumDeclaration
}

#target{
	++tType:TClass
	
	++tEnum:TEnum {
		++-tAnnotated->tType
	}
}